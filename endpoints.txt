Follow the following points to configure the front end to listen

Add the below script to the listening page, backend will comtinuously feed the required data and can retrieve the data from e.data

 <script>
    var eventSource = new EventSource("http://localhost:5000/binance/listen/BNBBTC")
    
    eventSource.addEventListener("message", function(e) {
      var div = document.getElementById('counter');
      div.innerHTML += e.data;
    }, false)

  </script>


############################################################### Listening Endpoints

Listening endpoints are available in the binanceStream __init__ file

To add endpoints to listening do the following things,

To extend the available crypto need to add the crypto to the symbols list in

        * getStreamData __init__.py file
        * pubsub data_center.py file

Once all the required crypto are added will add them to a collection in database and query so can easily extend the endpoints as required

  [GET] localhost:5000/binance/listen/crypto_name/crypto_interval     

  Here crypto_name is one from the symbols list mentioned above
  Here crypto_interval is one from the followings
          1m  15m   30m   1h    1d
          5m  1h  1d

############################################################### Listening Endpoints Ends

############################################################### Watch List Endpoints

To access the watch list of a user use the following end points

> Create a new watch list with one or more brands or add brands to the existing watch list 

  [POST]  localhost:5000/wlist/addBrand

  in the request body pass the following json

  {
      "email":"lakshan@gmail.com",
      "brands":["BNBBTC","BNBUSDT"]
  }

> To get the brand names in an existing watch list use the following endpoints

  [GET] localhost:5000/wlist/viewWlist/email_of_the_relevent_user


> To remove brands from the relevent watch list

  [DELETE]  localhost:5000/wlist/removeBrand/

  pass the following as a json in the request body

  {
    "email":"user@gmail.com",
    "brands":["brand01","brand02"]
  }


############################################################### Watch List Endpoints Ends


############################################################ User end points
Login = localhost:5000/user/login
Register = localhost:5000/user/register

> To add and view the profile photo of the user

  [POST] localhost:5000/user/add_profile_image

  In the data section include the following json file

  {
    "email" : "bg@gmail.com",
    "file" : "Add the base64 encoded image string here"}
  }


  [GET] localhost:5000/user/get_profile_image/<Add the User Email here>

############################################################ User end points ends

############################################################ TA end points
RSI =

MACD = localhost:5000/ta/macd/type(stock or crypto)/stockOrCryptoName/interval/0000
Bollinger Bands = localhost:5000/ta/bbands/type(stock or crypto)/stockOrCryptoName/interval/0000
ROC = localhost:5000/ta/roc/type(stock or crypto)/stockOrCryptoName/interval/0000
STOCH = localhost:5000/ta/stoch/type(stock or crypto)/stockOrCryptoName/interval/0000
MA = localhost:5000/ta/ma/type(stock or crypto)/stockOrCryptoName/interval/0000
SMA = localhost:5000/ta/sma/type(stock or crypto)/stockOrCryptoName/interval/0000
EMA = localhost:5000/ta/ema/type(stock or crypto)/stockOrCryptoName/interval/0000
WMA = localhost:5000/ta/wma/type(stock or crypto)/stockOrCryptoName/interval/0000
OBV = localhost:5000/ta/obv/type(stock or crypto)/stockOrCryptoName/interval/0000

############################################################ TA end points ends here

############################################################ Historical Crypto Data End point starts

Can use this to get the historical data from the database.

  [GET] localhost:5000/binance/historical/crypto_name_comes_here/interval_comes Here/start_date_in_milliseconds

  >>>>>>>> By default end date is 5 days back to the start date. Can alter the value at data_center reverse_date variable

Intervals are defined under the listening endpoints.

############################################################ Historical Data End point Ends

############################################################ Historical Stock Data End point starts

Can use this to get the historical data from the database.

  [GET] localhost:5000/stock/historical/stock_name_comes_here/interval_comes Here

Intervals are defined under the listening endpoints.

############################################################ Historical Data End point Ends

############################################################ General Endpoints starts

  [GET] localhost:5000/binance/get_crypto      - Get the available crypto list

  [GET] localhost:5000/stock/get_stock_list      - Get the available stock list

  [POST] localhost:5000/binance/add_crypto/new_crypto_name_comes_here          # Dont use this end point, there are some things to be added later

############################################################ General Endpoints Ends Here

############################################################ Notification Endpoints starts Here

  [GET]    localhost:/5000/notifications/listen_nots/open_price            # Use this to listen to the real time notifications on open open_price

  Example returned

  data: {'message':'successful','type': 'Over 5 percent incriment', 'symbol': 'BNBBTC', 'open price': '0.00874100', 'current peak price': 0.00812}

  type can be over 5,25,50 or 75    or else 25,50,75 decriment

  "current peak price" is the closing price of the last days kline for the relevent symbol



  You can use the following endpoint to get all the notifications from the last 5 days

    [GET]   localhost:5000/notifications/historical_nots/open_price


############################################################ Notification Endpoints ends Here



